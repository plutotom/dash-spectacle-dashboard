{"version":3,"file":"UploadPhotos-BXskgBu4.js","sources":["../../../resources/js/Pages/GooglePhotos/UploadPhotos.tsx"],"sourcesContent":["import { router } from '@inertiajs/react';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\ninterface Album {\n    id: string;\n    title: string;\n    productUrl: string;\n    mediaItemsCount: number;\n    coverPhotoUrl: string;\n}\n\ninterface UploadPhotosProps {\n    albums: Album[];\n    errors?: Record<string, string>;\n    success?: string;\n}\n\ninterface InertiaProgressEvent {\n    percentage: number;\n}\n\nconst UploadPhotos: React.FC<UploadPhotosProps> = ({ albums, errors, success }) => {\n    console.log(albums);\n    console.log(errors);\n    console.log(success);\n    const [albumId, setAlbumId] = useState(albums[0]?.id || '');\n    const [files, setFiles] = useState<FileList | null>(null);\n    const [progress, setProgress] = useState<number | null>(null);\n    const [results, setResults] = useState<unknown>(null);\n    const [uploadType, setUploadType] = useState<'google' | 'local'>('google');\n\n    // Album creation state\n    const [newAlbumName, setNewAlbumName] = useState('');\n    const [albumError, setAlbumError] = useState<string | null>(null);\n    const [albumSuccess, setAlbumSuccess] = useState<string | null>(null);\n\n    const [localImages, setLocalImages] = useState<{ filename: string; url: string }[]>([]);\n    const [loadingImages, setLoadingImages] = useState(false);\n    const [deleteError, setDeleteError] = useState<string | null>(null);\n\n    // Fetch local images when uploadType is 'local'\n    useEffect(() => {\n        if (uploadType === 'local') {\n            setLoadingImages(true);\n            axios\n                .get('/api/local-images', { withCredentials: true })\n                .then((res) => {\n                    setLocalImages(res.data.images || []);\n                    setLoadingImages(false);\n                })\n                .catch(() => setLoadingImages(false));\n        }\n    }, [uploadType]);\n\n    // Delete local image\n    const handleDeleteLocalImage = (filename: string) => {\n        setDeleteError(null);\n        console.log('deleting image', filename);\n        axios\n            .delete(`/api/local-images/${encodeURIComponent(filename)}`, {\n                headers: {\n                    'X-Requested-With': 'XMLHttpRequest',\n                    'X-CSRF-TOKEN': (document.querySelector('meta[name=\"csrf-token\"]') as HTMLMetaElement)?.content || '',\n                },\n            })\n            .then((res) => {\n                if (res.data.success) {\n                    setLocalImages((prev) => prev.filter((img) => img.filename !== filename));\n                } else {\n                    setDeleteError(res.data.error || 'Failed to delete image');\n                }\n            })\n            .catch(() => setDeleteError('Failed to delete image'));\n    };\n\n    const handleCreateAlbum = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!newAlbumName.trim()) {\n            setAlbumError('Album name is required');\n            return;\n        }\n        setAlbumError(null);\n        router.post(\n            '/api/create-album',\n            { name: newAlbumName },\n            {\n                onSuccess: () => {\n                    setNewAlbumName('');\n                    setAlbumSuccess('Album created! Reloading...');\n                    setTimeout(() => window.location.reload(), 1000);\n                },\n                onError: (errors) => {\n                    setAlbumError(errors?.name || 'Failed to create album');\n                },\n            }\n        );\n    };\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!files) {\n            return;\n        }\n\n        const data = {\n            ...(uploadType === 'google' && { albumId }),\n            photos: Array.from(files),\n        };\n\n        const endpoint = uploadType === 'google' ? '/api/upload-photos' : '/api/upload-photos-local';\n\n        router.post(endpoint, data, {\n            forceFormData: true,\n            onProgress: (event: InertiaProgressEvent) => {\n                setProgress(event.percentage);\n            },\n            onSuccess: (page: unknown) => {\n                setResults((page as { props: { results: unknown } }).props.results);\n                setProgress(null);\n            },\n            onError: () => {\n                setProgress(null);\n            },\n        });\n    };\n\n    return (\n        <div className=\"mx-auto max-w-2xl space-y-8 p-6\">\n            {/* Album creation form */}\n            <form onSubmit={handleCreateAlbum} className=\"mb-8 rounded-lg border border-gray-200 bg-white p-4 shadow-sm\">\n                <h2 className=\"mb-2 text-lg font-semibold text-gray-800\">Create a New Album</h2>\n                <div className=\"flex items-center space-x-2\">\n                    <input\n                        type=\"text\"\n                        value={newAlbumName}\n                        onChange={(e) => setNewAlbumName(e.target.value)}\n                        placeholder=\"Album name\"\n                        className=\"flex-1 rounded-md border border-gray-300 p-2 focus:border-blue-500 focus:ring-blue-500\"\n                    />\n                    <button\n                        type=\"submit\"\n                        className=\"rounded-md bg-green-600 px-4 py-2 text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2\"\n                    >\n                        Create Album\n                    </button>\n                </div>\n                {albumError && <div className=\"mt-2 text-sm text-red-600\">{albumError}</div>}\n                {albumSuccess && <div className=\"mt-2 text-sm text-green-600\">{albumSuccess}</div>}\n                {errors?.album_error && <div className=\"mt-2 text-sm text-red-600\">{errors.album_error}</div>}\n                {success && <div className=\"mt-2 text-sm text-green-600\">{success}</div>}\n            </form>\n\n            {/* Upload form */}\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n                {errors &&\n                    Object.values(errors).map((error) => (\n                        <div key={error} className=\"mb-4 rounded-lg bg-red-100 p-4 text-red-700\">\n                            {error}\n                        </div>\n                    ))}\n                {success && <div className=\"mb-4 rounded-lg bg-green-100 p-4 text-green-700\">{success}</div>}\n                <h1 className=\"mb-6 text-2xl font-bold text-gray-800\">Upload Photos</h1>\n\n                {/* Upload type selector */}\n                <div className=\"space-y-2\">\n                    <label className=\"block text-sm font-medium text-gray-700\">Upload Type:</label>\n                    <div className=\"flex space-x-4\">\n                        <label className=\"inline-flex items-center\">\n                            <input\n                                type=\"radio\"\n                                value=\"google\"\n                                checked={uploadType === 'google'}\n                                onChange={(e) => setUploadType(e.target.value as 'google')}\n                                className=\"form-radio h-4 w-4 text-blue-600\"\n                            />\n                            <span className=\"ml-2\">Google Photos</span>\n                        </label>\n                        <label className=\"inline-flex items-center\">\n                            <input\n                                type=\"radio\"\n                                value=\"local\"\n                                checked={uploadType === 'local'}\n                                onChange={(e) => setUploadType(e.target.value as 'local')}\n                                className=\"form-radio h-4 w-4 text-blue-600\"\n                            />\n                            <span className=\"ml-2\">Local Storage</span>\n                        </label>\n                    </div>\n                </div>\n\n                {/* Album selector - only show for Google Photos */}\n                {uploadType === 'google' && (\n                    <div className=\"space-y-2\">\n                        <label htmlFor=\"album-select\" className=\"block text-sm font-medium text-gray-700\">\n                            Select Album:\n                        </label>\n                        <select\n                            id=\"album-select\"\n                            name=\"album\"\n                            value={albumId}\n                            onChange={(e) => setAlbumId(e.target.value)}\n                            className=\"w-full rounded-md border border-gray-300 p-2 focus:border-blue-500 focus:ring-blue-500\"\n                        >\n                            {albums.map((album) => (\n                                <option key={album.id} value={album.id}>\n                                    {album.title} ({album.mediaItemsCount || 0} items)\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n                )}\n\n                <div className=\"space-y-2\">\n                    <label htmlFor=\"file-input\" className=\"block text-sm font-medium text-gray-700\">\n                        Select Photos:\n                    </label>\n                    <input\n                        id=\"file-input\"\n                        type=\"file\"\n                        multiple\n                        accept=\"image/*\"\n                        onChange={(e) => setFiles(e.target.files)}\n                        className=\"w-full rounded-md border border-gray-300 p-2 focus:border-blue-500 focus:ring-blue-500\"\n                    />\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"w-full rounded-md bg-blue-600 px-4 py-2 text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n                >\n                    Upload to {uploadType === 'google' ? 'Google Photos' : 'Local Storage'}\n                </button>\n\n                {progress !== null && (\n                    <div className=\"space-y-2\">\n                        <progress value={progress} max={100} className=\"h-2 w-full rounded-full bg-gray-200\">\n                            {progress}%\n                        </progress>\n                        <span className=\"text-sm text-gray-600\">{progress}%</span>\n                    </div>\n                )}\n\n                {results && (\n                    <div className=\"mt-6 rounded-lg bg-gray-50 p-4\">\n                        <h3 className=\"mb-2 text-lg font-medium text-gray-800\">Upload Results</h3>\n                        <pre className=\"overflow-x-auto text-sm text-gray-600\">{JSON.stringify(results, null, 2)}</pre>\n                    </div>\n                )}\n            </form>\n\n            {/* Local Images Viewer */}\n            {uploadType === 'local' && (\n                <div className=\"mt-10\">\n                    <h2 className=\"mb-4 text-lg font-semibold text-gray-800\">Local Images</h2>\n                    {loadingImages ? (\n                        <div>Loading images...</div>\n                    ) : localImages.length === 0 ? (\n                        <div className=\"text-gray-500\">No local images found.</div>\n                    ) : (\n                        <div className=\"grid grid-cols-2 gap-4\">\n                            {localImages.map((img) => (\n                                <div key={img.filename} className=\"relative rounded border bg-white p-2 shadow\">\n                                    <img src={img.url} alt={img.filename} className=\"h-40 w-full rounded object-cover\" />\n                                    <div className=\"mt-2 flex items-center justify-between\">\n                                        <span className=\"break-all text-xs\">{img.filename}</span>\n                                        <button\n                                            type=\"button\"\n                                            onClick={() => handleDeleteLocalImage(img.filename)}\n                                            className=\"ml-2 rounded bg-red-600 px-2 py-1 text-xs text-white hover:bg-red-700\"\n                                        >\n                                            Delete\n                                        </button>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                    {deleteError && <div className=\"mt-2 text-sm text-red-600\">{deleteError}</div>}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default UploadPhotos;\n"],"names":["UploadPhotos","albums","errors","success","albumId","setAlbumId","useState","_a","files","setFiles","progress","setProgress","results","setResults","uploadType","setUploadType","newAlbumName","setNewAlbumName","albumError","setAlbumError","albumSuccess","setAlbumSuccess","localImages","setLocalImages","loadingImages","setLoadingImages","deleteError","setDeleteError","useEffect","axios","res","handleDeleteLocalImage","filename","prev","img","handleCreateAlbum","e","router","handleSubmit","data","endpoint","event","page","jsxs","jsx","error","album"],"mappings":"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"}