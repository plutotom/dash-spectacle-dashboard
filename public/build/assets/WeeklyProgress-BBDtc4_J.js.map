{"version":3,"file":"WeeklyProgress-BBDtc4_J.js","sources":["../../../resources/js/Pages/Habitify/components/WeeklyProgress.tsx"],"sourcesContent":["import { WeeklyProgressProps } from '@/types/habitify';\n\nfunction getBoxColor(status: string) {\n    switch (status) {\n        case 'completed':\n            return 'bg-green-500';\n        case 'failed':\n            return 'bg-red-400';\n        case 'skipped':\n            return 'bg-gray-300';\n        case 'in_progress':\n            return 'bg-yellow-300';\n        case 'none':\n        default:\n            return 'bg-gray-100';\n    }\n}\n\nfunction getAriaLabel(status: string, percent: number, date: string) {\n    if (status === 'completed') return `${date}: completed`;\n    if (status === 'failed') return `${date}: failed`;\n    if (status === 'skipped') return `${date}: skipped`;\n    if (status === 'in_progress') return `${date}: in progress, ${Math.round(percent)}%`;\n    return `${date}: not started`;\n}\n\nfunction getTitle(status: string, percent: number, date: string) {\n    if (status === 'completed') return `${date}: Completed`;\n    if (status === 'failed') return `${date}: Failed`;\n    if (status === 'skipped') return `${date}: Skipped`;\n    if (status === 'in_progress') return `${date}: In progress (${Math.round(percent)}%)`;\n    return `${date}: Not started`;\n}\n\nexport default function WeeklyProgress({ habits, progress }: WeeklyProgressProps) {\n    return (\n        <div className=\"space-y-4\">\n            <h2 className=\"text-xl font-semibold\">Weekly Progress</h2>\n            <div className=\"grid grid-cols-1 gap-6\">\n                {habits.map((habit) => {\n                    const weeklyData = progress[habit.id];\n                    return (\n                        <div key={habit.id} className=\"rounded-lg bg-white p-4 shadow\">\n                            <h3 className=\"mb-4 font-medium\">{habit.name}</h3>\n                            <div className=\"grid grid-cols-7 gap-2\">\n                                {weeklyData.map((day, index) => {\n                                    const percent =\n                                        day.progress && day.progress.target_value > 0 ? (day.progress.current_value / day.progress.target_value) * 100 : 0;\n                                    const color = getBoxColor(day.status);\n                                    const date = new Date(day.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric', weekday: 'short' });\n                                    return (\n                                        <div key={index} className=\"flex flex-col items-center\">\n                                            <div\n                                                aria-label={getAriaLabel(day.status, percent, date)}\n                                                title={getTitle(day.status, percent, date)}\n                                                className={`h-7 w-7 rounded border border-gray-200 ${color} transition-transform duration-150 hover:scale-110 hover:shadow-md`}\n                                            />\n                                            <span className=\"mt-1 select-none text-[10px] text-gray-400\">\n                                                {new Date(day.date).toLocaleDateString('en-US', { weekday: 'short' })}\n                                            </span>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n}\n"],"names":["getBoxColor","status","getAriaLabel","percent","date","getTitle","WeeklyProgress","habits","progress","jsxs","jsx","habit","weeklyData","day","index","color"],"mappings":"sCAEA,SAASA,EAAYC,EAAgB,CACjC,OAAQA,EAAQ,CACZ,IAAK,YACM,MAAA,eACX,IAAK,SACM,MAAA,aACX,IAAK,UACM,MAAA,cACX,IAAK,cACM,MAAA,gBACX,IAAK,OACL,QACW,MAAA,aAAA,CAEnB,CAEA,SAASC,EAAaD,EAAgBE,EAAiBC,EAAc,CACjE,OAAIH,IAAW,YAAoB,GAAGG,CAAI,cACtCH,IAAW,SAAiB,GAAGG,CAAI,WACnCH,IAAW,UAAkB,GAAGG,CAAI,YACpCH,IAAW,cAAsB,GAAGG,CAAI,kBAAkB,KAAK,MAAMD,CAAO,CAAC,IAC1E,GAAGC,CAAI,eAClB,CAEA,SAASC,EAASJ,EAAgBE,EAAiBC,EAAc,CAC7D,OAAIH,IAAW,YAAoB,GAAGG,CAAI,cACtCH,IAAW,SAAiB,GAAGG,CAAI,WACnCH,IAAW,UAAkB,GAAGG,CAAI,YACpCH,IAAW,cAAsB,GAAGG,CAAI,kBAAkB,KAAK,MAAMD,CAAO,CAAC,KAC1E,GAAGC,CAAI,eAClB,CAEA,SAAwBE,EAAe,CAAE,OAAAC,EAAQ,SAAAC,GAAiC,CAE1E,OAAAC,EAAA,KAAC,MAAI,CAAA,UAAU,YACX,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,wBAAwB,SAAe,kBAAA,QACpD,MAAI,CAAA,UAAU,yBACV,SAAOH,EAAA,IAAKI,GAAU,CACb,MAAAC,EAAaJ,EAASG,EAAM,EAAE,EAEhC,OAAAF,EAAA,KAAC,MAAmB,CAAA,UAAU,iCAC1B,SAAA,CAAAC,EAAA,IAAC,KAAG,CAAA,UAAU,mBAAoB,SAAAC,EAAM,KAAK,EAC7CD,MAAC,OAAI,UAAU,yBACV,WAAW,IAAI,CAACG,EAAKC,IAAU,CAC5B,MAAMX,EACFU,EAAI,UAAYA,EAAI,SAAS,aAAe,EAAKA,EAAI,SAAS,cAAgBA,EAAI,SAAS,aAAgB,IAAM,EAC/GE,EAAQf,EAAYa,EAAI,MAAM,EAC9BT,EAAO,IAAI,KAAKS,EAAI,IAAI,EAAE,mBAAmB,QAAS,CAAE,MAAO,QAAS,IAAK,UAAW,QAAS,QAAS,EAE5G,OAAAJ,EAAA,KAAC,MAAgB,CAAA,UAAU,6BACvB,SAAA,CAAAC,EAAA,IAAC,MAAA,CACG,aAAYR,EAAaW,EAAI,OAAQV,EAASC,CAAI,EAClD,MAAOC,EAASQ,EAAI,OAAQV,EAASC,CAAI,EACzC,UAAW,0CAA0CW,CAAK,oEAAA,CAC9D,EACCL,EAAA,IAAA,OAAA,CAAK,UAAU,6CACX,aAAI,KAAKG,EAAI,IAAI,EAAE,mBAAmB,QAAS,CAAE,QAAS,OAAA,CAAS,CACxE,CAAA,CAAA,CAAA,EARMC,CASV,CAAA,CAEP,CACL,CAAA,CAAA,CAAA,EArBMH,EAAM,EAsBhB,CAAA,CAEP,CACL,CAAA,CAAA,EACJ,CAER"}