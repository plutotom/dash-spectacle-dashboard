services:
    laravel.test:
        container_name: 'dash-spectral-dashboard'
        # restart: unless-stopped
        # labels:
        # - "traefik.enable=true"
        # - "traefik.http.routers.laravel.rule=Host(`spectral.plutotom.com`)"
        # - "traefik.http.routers.laravel.rule=Host(`debianserverIp:port this is running on, because that is waht nginx reverse proxy does.`)"
        build:
            context: './docker/8.4'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: 'sail-8.4/app'
        restart: unless-stopped
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
            # - '${REVERB_PORT:-8080}:8080'
            # - '${REVERB_SERVER_PORT:-8080}:8080'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
            # - 'sail-storage:/var/www/html/storage'
            # - 'sail-bootstrap-cache:/var/www/html/bootstrap/cache'
        networks:
            - sail
        depends_on:
            - mysql
            - redis

    # Nightwatch Agent Service
    nightwatch-agent:
        image: 'sail-8.4/app' # Use the same image as laravel.test
        container_name: 'dash-spectral-nightwatch'
        restart: always
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - redis
        command: php artisan nightwatch:agent
        # Optional: Add healthcheck for the agent
        healthcheck:
            test: ['CMD', 'php', 'artisan', 'nightwatch:status']
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s

    mysql:
        image: 'mysql/mysql-server:8.0'
        restart: unless-stopped
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        restart: unless-stopped
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    mailpit:
        image: 'axllent/mailpit:latest'
        ports:
            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
        networks:
            - sail
networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    sail-meilisearch:
        driver: local
    # sail-storage:
    #     driver: local
    # sail-bootstrap-cache:
    #     driver: local
